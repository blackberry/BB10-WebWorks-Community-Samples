<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 *
 * Copyright 2012 Research In Motion Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 -->
<project basedir="." name="build">
	<!-- Code Signing Key Password -->
	<property name="sign.pw" value="********"/>

	<!-- Set the details of the device or simulator for deployment -->
	<!-- For BB10 device -->
	<property name="device.bb10.ip" value="169.254.0.1"/>
	<property name="device.bb10.pw" value="********" />
	<property name="device.bb10.pin" value="********" />

	<!-- For BB10 Simulator -->
	<property name="sim.bb10.ip" value="192.168.0.134"/>
	<!-- For Tablet device -->
	<property name="device.tablet.ip" value="169.254.0.5"/>
	<property name="device.tablet.pw" value="********" />
	<property name="device.tablet.pin" value="********" />

	<!-- For BBOS Java device (only password is needed) -->
	<property name="device.bbos.pw" value="" />

	<!-- Files to exclude from zip -->
	<property name="file.excludes" value="build/ bin/ .project .externalToolBuilders/ build.xml build.number"/>

	<!-- SDK locations -->
	<property name="bbwp.bbos.dir" value="C:\Program Files\Research In Motion\BlackBerry WebWorks SDK 2.3.1.5"/>
	<property name="bbwp.tablet.dir" value="C:\Program Files\Research In Motion\BlackBerry WebWorks SDK for TabletOS 2.2.0.5"/>
	<property name="bbwp.bb10.dir" value="C:\Program Files\Research In Motion\BlackBerry 10 WebWorks SDK 1.0.4.7"/>
	<!-- Use RippleSites or a WebServer to host the project for testing in Ripple -->
	<property name="ripple.dir" value="C:\Apache2.2\htdocs\${ant.project.name}"/>

	<!-- set the .bat extension for windows machines -->
	<condition property="commandExtension" value=".bat" else="">
		<os family="windows"/>
	</condition>

	<!-- Build Tool locations -->
	<property name="tools.dir" value="${ant.home}/.."/>
	<property name="yui.dir" value="${tools.dir}/yuicompressor-2.4.7"/>
	<property name="rhino.dir" value="${tools.dir}/rhino1_7R3"/>
	<property name="yui.jar" value="${yui.dir}/build/yuicompressor-2.4.7.jar"/>
	<property name="rhino.jar" value="${rhino.dir}/js.jar"/>
	<property name="jslint.js" value="${tools.dir}/fulljslint.js"/>
	<property name="jshint.js" value="${tools.dir}/fulljshint.js"/>
	<property name="csslint.js" value="${tools.dir}/csslint-rhino.js"/>

	<!-- Build Tool options -->
	<property name="tool.jslint.opts" value=""/>
	<property name="tool.jshint.opts" value=""/>
	<property name="tool.csslint.opts" value=""/>

	<!-- Build Directories -->
	<property name="zip.name" value="${ant.project.name}.zip"/>
	<property name="build.dir" value="build"/>
	<property name="build.js.dir" value="${build.dir}/js"/>
	<property name="build.css.dir" value="${build.dir}/css"/>
	<property name="src.dir" value="${basedir}"/>
	<property name="src.js.dir" value="${basedir}/js"/>
	<property name="src.css.dir" value="${basedir}/css"/>
	<!-- Output directories for files -->
	<property name="output.dir" value="bin"/>
	<property name="bin.bbos" value="${output.dir}/bbos"/>
	<property name="bin.tablet" value="${output.dir}/tablet"/>
	<property name="bin.bb10" value="${output.dir}/bb10"/>
	<!-- Append this value to the Output Directory for test builds -->
	<property name="bin.test" value="-test"/>
	<!-- Append this value to the Output Directory for beta builds -->
	<property name="bin.beta" value="-beta"/>

	<!-- Targets -->
	<target name="ripple" depends="-copy.html">
		<copy todir="${ripple.dir}">
			<fileset dir="${build.dir}"/>
		</copy>
	</target>

	<target name="all" 
		description="Builds project files for production use"
		depends="
			bbos.prod,
			tablet.prod,
			bb10.prod,
			ripple">
	</target>
	
	<target name="test" 
		description="Builds project files with WebInspector and Debug Token"
		depends="
			bbos.test,
			tablet.test,
			bb10.test,
			ripple">
	</target>

	<target name="beta" 
		description="Builds project files with WebInspector but Signed as well"
		depends="
			bbos.test,
			tablet.beta,
			bb10.beta,
			ripple">
	</target>

	<!-- Clean -->
	<target name="clean">
		<delete dir="${build.dir}" quiet="true"/>
		<delete file="${zip.name}"/>
		<delete dir="bin"/>
	</target>

	<target name="-init">
		<delete dir="${build.dir}"/>
		<delete file="${ant.project.name}.zip"/>
		
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.js.dir}"/>
		<mkdir dir="${build.css.dir}"/>
	</target>

	<!-- Copy files to build directory -->
	<target name="-copy.html" depends="-init">
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" excludes="${file.excludes}"/>
		</copy>
	</target>

	<!-- Zip the application elements -->
	<target name="zip" depends="-copy.html">
		<zip basedir="${build.dir}" destfile="${zip.name}"/>
	</target>

	<!-- for Java Smartphone -->
	<target name="bbos.prod" depends="zip" 
		description="for Java Smartphone - Production">
		<exec executable="${bbwp.bbos.dir}/bbwp">
			<arg line="${zip.name} -g ${sign.pw} -o ./${bin.bbos}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for Java Smartphone Test -->
	<target name="bbos.test" depends="zip" 
		description="for Java Smartphone - Test">
		<exec executable="${bbwp.bbos.dir}/bbwp">
			<arg line="${zip.name} -d -s -o ./${bin.bbos}${bin.test}"/>
		</exec>
		<echo>Finished</echo>
	</target>
	
	<!-- for Java Smartphone Beta -->
	<target name="bbos.beta" depends="zip" 
		description="for Java Smartphone - Beta">
		<exec executable="${bbwp.bbos.dir}/bbwp">
			<arg line="${zip.name} -g ${sign.pw} -d -o ./${bin.bbos}${bin.beta}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for Tablet -->
	<target name="tablet.prod" depends="zip" 
		description="for Tablet - Production">
		<local name="build.number"/>
		<buildnumber/>
		<exec executable="${bbwp.tablet.dir}/bbwp/bbwp">
			<arg line="${zip.name} -g ${sign.pw} -buildId ${build.number} -o ./${bin.tablet}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for Tablet Test -->
	<target name="tablet.test" depends="zip" 
		description="for Tablet - Test">
		<exec executable="${bbwp.tablet.dir}/bbwp/bbwp">
			<arg line="${zip.name} -d -s -o ./${bin.tablet}${bin.test}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for Tablet Beta-->
	<target name="tablet.beta" depends="zip" 
		description="for Tablet - Beta">
		<local name="build.number"/>
		<buildnumber/>
		<exec executable="${bbwp.tablet.dir}/bbwp/bbwp">
			<arg line="${zip.name} -g ${sign.pw} -buildId ${build.number} -d -o ./${bin.tablet}${bin.beta}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for BB10 -->
	<target name="bb10.prod" depends="zip" 
		description="for BB10 - Production">
		<local name="build.number"/>
		<buildnumber/>
		<exec executable="${bbwp.bb10.dir}/bbwp${commandExtension}">
			<arg line="${zip.name} -g ${sign.pw} --buildId ${build.number} -o ./${bin.bb10}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for BB10 Test -->
	<target name="bb10.test" depends="zip" 
		description="for BB10 - Test">
		<exec executable="${bbwp.bb10.dir}/bbwp${commandExtension}">
			<arg line="${zip.name} -d -s -o ./${bin.bb10}${bin.test}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- for BB10 Beta -->
	<target name="bb10.beta" depends="zip" 
		description="for BB10 - Beta">
		<local name="build.number"/>
		<buildnumber/>
		<exec executable="${bbwp.bb10.dir}/bbwp${commandExtension}">
			<arg line="${zip.name} -g ${sign.pw} --buildId ${build.number} -d -o ./${bin.bb10}${bin.beta}"/>
		</exec>
		<echo>Finished</echo>
	</target>

	<!-- BB10 Deployment Commands -->
	<target name="deploy.bb10.device.prod" depends="" 
		description="Deploy signed BB10 build (prod) to device">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -password ${device.bb10.pw} -device ${device.bb10.ip} -package ./${bin.bb10}/device/${ant.project.name}.bar"/>
		</exec>
	</target>

	<target name="deploy.bb10.device.test" depends="" 
		description="Deploy debug BB10 build (test) to device">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -password ${device.bb10.pw} -device ${device.bb10.ip} -package ./${bin.bb10}${bin.test}/device/${ant.project.name}.bar"/>
		</exec>
	</target>
	
	<target name="deploy.bb10.device.beta" depends="" 
		description="Deploy signed BB10 build with WebInspector (beta) to device">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -password ${device.bb10.pw} -device ${device.bb10.ip} -package ./${bin.bb10}${bin.beta}/device/${ant.project.name}.bar"/>
		</exec>
	</target>

	<target name="deploy.bb10.sim.prod" depends="" 
		description="Deploy signed BB10 build (prod) to simulator">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -device ${sim.bb10.ip} -package ./${bin.bb10}/simulator/${ant.project.name}.bar"/>
		</exec>
	</target>

	<target name="deploy.bb10.sim.test" depends="" 
		description="Deploy debug BB10 build (test) to simulator">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -device ${sim.bb10.ip} -package ./${bin.bb10}${bin.test}/simulator/${ant.project.name}.bar"/>
		</exec>
	</target>
	
	<target name="deploy.bb10.sim.beta" depends="" 
		description="Deploy signed BB10 build with WebInspector (beta) to simulator">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -device ${sim.bb10.ip} -package ./${bin.bb10}${bin.beta}/simulator/${ant.project.name}.bar"/>
		</exec>
	</target>

	<!-- Tablet Deployment Commands -->
	<target name="deploy.tablet.prod" depends="" 
		description="Deploy signed Tablet build (prod) to device">
		<exec executable="${bbwp.tablet.dir}/bbwp/blackberry-tablet-sdk/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -password ${device.tablet.pw} -device ${device.tablet.ip} -package ./${bin.tablet}/${ant.project.name}.bar"/>
		</exec>
	</target>

	<target name="deploy.tablet.test" depends="" 
		description="Deploy debug Tablet build (test) to device">
		<exec executable="${bbwp.tablet.dir}/bbwp/blackberry-tablet-sdk/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -password ${device.tablet.pw} -device ${device.tablet.ip} -package ./${bin.tablet}${bin.test}/${ant.project.name}.bar"/>
		</exec>
	</target>
	
	<target name="deploy.tablet.beta" depends="" 
		description="Deploy signed BB10 build with WebInspector (beta) to device">
		<exec executable="${bbwp.tablet.dir}/bbwp/blackberry-tablet-sdk/bin/blackberry-deploy${commandExtension}">
			<arg line="-installApp -launchApp -password ${device.tablet.pw} -device ${device.tablet.ip} -package ./${bin.tablet}${bin.beta}/${ant.project.name}.bar"/>
		</exec>
	</target>

	<!-- BBOS Javaloader commands -->
	<target name="deploy.bbos.prod"
		description="Javaloader for prod build">
		<exec executable="${bbwp.bbos.dir}/bin/JavaLoader">
			<arg line="-u -w${device.bbos.pw} load ./${bin.bbos}/OTAInstall/${ant.project.name}.jad"/>
		</exec>
	</target>

	<target name="deploy.bbos.test"
		description="Javaloader for test build">
		<exec executable="${bbwp.bbos.dir}/bin/JavaLoader">
			<arg line="-u load ./${bin.bbos}${bin.test}/OTAInstall/${ant.project.name}.jad"/>
		</exec>
	</target>
	
	<target name="deploy.bbos.beta"
		description="Javaloader for beta build">
		<exec executable="${bbwp.bbos.dir}/bin/JavaLoader">
			<arg line="-u -w${device.bbos.pw} load ./${bin.bbos}${bin.beta}/OTAInstall/${ant.project.name}.jad"/>
		</exec>
	</target>

	<!-- Debug Token tasks -->

	<target name="createDebugToken.bb10">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-debugtokenrequest${commandExtension}">
			<arg line="-storepass ${sign.pw} -devicepin ${device.bb10.pin} debugtoken.bar"/>
		</exec>
		<move file="debugtoken.bar" todir="${bbwp.bb10.dir}"/>
	</target>

	<target name="deployDebugToken.bb10">
		<exec executable="${bbwp.bb10.dir}/dependencies/tools/bin/blackberry-deploy${commandExtension}">
			<arg line="-installDebugToken '${bbwp.bb10.dir}/debugtoken.bar' -device ${device.bb10.ip} -password ${device.bb10.pw}"/>
		</exec>
	</target>

	<target name="createDebugToken.tablet">
		<exec executable="${bbwp.tablet.dir}/bbwp/blackberry-tablet-sdk/bin/blackberry-debugtokenrequest${commandExtension}">
			<arg line="-storepass ${sign.pw} -devicepin ${device.tablet.pin} playbookdebugtoken.bar"/>
		</exec>
		<move file="playbookdebugtoken.bar" todir="${user.home}"/>
	</target>

	<target name="deployDebugToken.tablet">
		<exec executable="${bbwp.tablet.dir}/bbwp/blackberry-tablet-sdk/bin/blackberry-deploy${commandExtension}">
			<arg line="-installDebugToken '${user.home}/playbookdebugtoken.bar' -device ${device.tablet.ip} -password ${device.tablet.pw}"/>
		</exec>
	</target>

	<target name="setDebugToken.tablet">
		<echo message="Edit ${bbwp.tablet.dir}/bbwp/bin/bbwp.properties" />
		<echo message="Ensure that the debug_token node is set to: ${user.home}/playbookdebugtoken.bar" />
	</target>


	<!-- Optimization Tasks -->

	<target name="optimize" depends="lint,minify"></target>

	<target name="lint" depends="jslint,jshint,csslint"></target>

	<target name="minify" depends="js.minify,css.minify"></target>


	<!-- JSLint target, run separately -->
	<target name="jslint">
	  <apply dir="${src.js.dir}" executable="java" parallel="false" failonerror="${lintfail}">
			<fileset dir="${src.js.dir}">
				<include name="**/*.js"/>
				<exclude name="**/*.min.js"/>
			</fileset>
			<arg value="-jar" />
			<arg path="${rhino.jar}" />
			<arg path="${jslint.js}" />
			<srcfile/>
			<arg value="${tool.jslint.opts}" />
		</apply>
		<echo>JSLint Successful</echo>
	</target>

	<!-- JSHint target, run separately -->
	<target name="jshint">
		<apply dir="${src.js.dir}" executable="java" parallel="false" failonerror="${lintfail}">
			<fileset dir="${src.js.dir}">
				<include name="**/*.js"/>
				<exclude name="**/*.min.js"/>
			</fileset>
			<arg value="-jar" />
			<arg path="${rhino.jar}" />
			<arg path="${jshint.js}" />
			<srcfile/>
			<arg value="${tool.jshint.opts}" />
		</apply>
		<echo>JSHint Successful</echo>
	</target>

	<!-- CSSLint target, run separately -->
	<target name="csslint">
		<apply dir="${src.css.dir}" executable="java" parallel="false" failonerror="${lintfail}">
			<fileset dir="${src.css.dir}">
				<include name="**/*.css"/>
				<exclude name="**/*.min.css"/>
			</fileset>
			<arg value="-jar" />
			<arg path="${rhino.jar}" />
			<arg path="${csslint.js}" />
			<srcfile/>
			<arg value="${tool.csslint.opts}" />
		</apply>
		<echo>CSSLint Successful</echo>
	</target>
	
	 <!--Concatenate JS files-->
	<target name="js.concatenate" depends="-init"
		description="Concatenates specified JavaScript files">
		<concat destfile="${build.js.dir}/${jsconcat}">
			<fileset 
				dir="${src.js.dir}"
				includes="*.js" />
		</concat>
		<echo>Finished</echo>
	</target>
	
	<!--Concatenate CSS files-->
	<target name="css.concatenate" depends="-init" 
		description="Concatenates specified CSS files">
		<concat destfile="${build.css.dir}/${cssconcat}">
			<fileset 
				dir="${src.css.dir}"
				includes="*.css"/>
		</concat>
		<echo>Finished</echo>
	</target>
	
	<!--Minify JS files-->
	<target name="js.minify" depends="js.concatenate,-copy.html" 
		description="Minifies JavaScript files">
		<apply executable="java" parallel="false" dest="${build.js.dir}">
			<fileset 
				dir="${build.js.dir}" 
				includes="${jsconcat}"/>
			<arg line="-jar"/>
			<arg path="${yui.jar}"/>
			<srcfile/>
			<arg line="-o"/>
			<mapper type="glob" from="*.js" to="*.js-min"/>
			<targetfile/>
		</apply>
		<delete>
			<fileset dir="${build.js.dir}" includes="*.js" excludes="*.js-min"/>
		</delete>
		<move file="${build.js.dir}/${jsconcat}-min" tofile="${build.js.dir}/${jsconcat}"/>
		<echo>Finished</echo>
	</target>
	
	<!--Minify CSS files-->
	<target name="css.minify" depends="css.concatenate,-copy.html" 
		description="Minifies CSS files">
		<apply executable="java" parallel="false"  dest="${build.css.dir}">
			<fileset 
				dir="${build.css.dir}" 
				includes="${cssconcat}"/>
			<arg line="-jar"/>
			<arg path="${yui.jar}"/>
			<arg line="--line-break 0"/>
			<srcfile/>
			<arg line="-o"/>
			<mapper type="glob" from="*.css" to="*.css-min"/>
			<targetfile/>
		</apply>
		<delete>
			<fileset dir="${build.css.dir}" includes="*.css" excludes="*.css-min"/>
		</delete>
		<move file="${build.css.dir}/${cssconcat}-min" tofile="${build.css.dir}/${cssconcat}"/>
		<echo>Finished</echo>
	</target>
</project>